plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
    constraints {
        implementation("org.apache.logging.log4j:log4j-core") {
            version {
                strictly("[2.17, 3[")
                prefer("2.17.1")
            }
            because("CVE-2021-44228, CVE-2021-45046, CVE-2021-45105: Log4j vulnerable to remote code execution and other critical security vulnerabilities")
        }
    }
    minecraft "com.mojang:minecraft:1.18.1"
    mappings "net.fabricmc:yarn:1.18.1+build.22:v2"
    modImplementation "net.fabricmc:fabric-loader:0.13.1"

    //Fabric api
    modImplementation "net.fabricmc.fabric-api:fabric-api:0.46.4+1.18"
}
//dependencies {
//    minecraft "com.mojang:minecraft:1.16.5"
//    mappings "net.fabricmc:yarn:1.16.5+build.5:v2"
//    modImplementation "net.fabricmc:fabric-loader:0.11.2"
//
//    //Fabric api
//    modImplementation "net.fabricmc.fabric-api:fabric-api:0.31.0+1.16"
//}
//dependencies {
//	//to change the versions see the gradle.properties file
//	minecraft "com.mojang:minecraft:${project.minecraft_version}"
//	mappings "net.fabricmc:yarn:${project.yarn_mappings}"
//	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"
//
//	// Fabric API. This is technically optional, but you probably want it anyway.
//	modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
//
//	//modImplementation 'com.github.javachaos:modproperties:release1'
//	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
//	// You may need to force-disable transitiveness on them.
//}

processResources {
    inputs.property "version", project.version
    duplicatesStrategy = 'include'

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

//curseforge {
//    apiKey = "${project.curseForgeApiKey}" // This should really be in a gradle.properties file
//    project {
//        id = '340764'
//        changelog = file('changelog.txt') // A file can also be set using: changelog = file('changelog.txt')
//        releaseType = 'beta'
//        mainArtifact(remapJar)
//        afterEvaluate {
//            mainArtifact(remapJar)
//            uploadTask.dependsOn(remapJar)
//            //tasks.curseforge340764.dependsOn remapJar
//        }
//    }
//    options {
//        forgeGradleIntegration = false
//    }
//}
// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }
    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        mavenLocal()
    }
}
